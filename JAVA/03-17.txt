接口和抽象类:
相同:
接口和抽象类都不能被实例化
实现接口或继承抽象类的普通子类都必须实现这些抽象方法
不同：
抽象类可以包含普通方法和代码块，接口里只能包含抽象方法，静态方法和默认方法
抽象类可以有构造方法而接口没有
抽象类中的成员变量可以是各种类型的，接口的成员变量
只能是public static final类型且必须赋值

重载发生在同一个类中，方法名相同，参数列表，返回类型，权限修饰符可以不同
重写发生在子类中，方法名称，参数列表，权限修饰符要大于父类方法，声明异常范围要小于父类方法
但是 final 和private 修饰的方法不可重写

== 和 equals 的区别

== 比较基本类型，比较的是值
== 比较引用类型，比较的是内存地址

equals 是Object类的方法，本质上与 == 一样，但是有些类重写了equals方法，比如 String 的equals被
重写后，比较的是字符值，另外重写equals后，也必须重写hashcode（）方法


异常处理机制:
1.使用try ,catch,finaly 捕获异常，finaly 中的代码一定会执行，捕获异常后程序会继续执行
2.使用 throws声明该方法可能会抛出的异常类型，出现异常后，程序终止

HashMap原理:
使用数组+链表+红黑树
特点:key 值不重复 可以为null ,线程不安全

想要线程安全的HashMap怎么办?
使用ConcurrentHashMap
使用HashTable
使用Collections.synchronizedHashMap

